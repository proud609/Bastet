stages:
  - bastet

bastet:
  stage: bastet
  image: $DOCKER_COMPOSE_IMAGE
  variables:
    BASTET_REPO: "https://github.com/OneSavieLabs/Bastet.git"

  before_script:
    # Install required tools
    - apk add --no-cache docker-compose git bash curl
    
    # Clone your scanner service repository
    - cd ..
    - git clone ${BASTET_REPO} bastet-cicd
    - cd bastet-cicd
    - git checkout feat/cicd
    - docker-compose -f docker-compose.cicd.yml down --remove-orphans || true
   
    
  script:
    # Start the scanner service stack
    - docker-compose -f docker-compose.cicd.yml up -d postgres
    - docker-compose -f docker-compose.cicd.yml exec -T postgres bash -c "until pg_isready -U test; do sleep 1; done"
    - docker cp ./init/01-n8n.sql postgres:/tmp/init.sql
    - docker-compose -f docker-compose.cicd.yml exec -T postgres psql -U test -h localhost -d n8n -f /tmp/init.sql  
    - docker-compose -f docker-compose.cicd.yml up -d n8n bastet
    - docker cp ${CI_PROJECT_DIR}/. bastet:/app/scan-queue/
    - mkdir -p ${CI_PROJECT_DIR}/scan-reports
    - docker-compose -f docker-compose.cicd.yml exec -T bastet
      poetry run python ./cli/main.py scan 
        --folder-path /app/scan-queue/
        --n8n-url http://n8n:5678 
        --output-path /app/reports/ 
        --report-name scan-report
    - docker cp bastet:/app/reports/. ${CI_PROJECT_DIR}/scan-reports/
    
  
  after_script:
    - docker-compose -f docker-compose.cicd.yml down -v --remove-orphans || true

  
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/scan-reports
    expire_in: 30 days
  
  only:
    - merge_requests
    - main
    - develop